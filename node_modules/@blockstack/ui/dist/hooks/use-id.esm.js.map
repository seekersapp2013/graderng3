{"version":3,"file":"use-id.esm.js","sources":["../../src/hooks/use-id.ts"],"sourcesContent":["import { useId as useUID } from '@reach/auto-id';\n\nfunction generatePrefix(prefix: string, id: string) {\n  return `${prefix}-${id}`;\n}\n\n/**\n * Reack hook to generate unique id\n *\n * @param idProp the external id passed from the user\n * @param prefix prefix to append before the id\n */\nexport function useId(idProp?: string, prefix?: string) {\n  const uuid = useUID() as string;\n  const id = idProp ?? uuid;\n  return prefix ? generatePrefix(prefix, id) : id;\n}\n\n/**\n * Reack hook to generate ids for use in compound components\n *\n * @param idProp the external id passed from the user\n * @param prefixes array of prefixes to use\n *\n * @example\n *\n * ```js\n * const [buttonId, menuId] = useIds(\"52\", \"button\", \"menu\")\n *\n * // buttonId will be `button-52`\n * // menuId will be `menu-52`\n * ```\n */\nexport function useIds(idProp?: string, ...prefixes: string[]) {\n  const id = useId(idProp);\n  return prefixes.map(prefix => generatePrefix(prefix, id));\n}\n"],"names":["generatePrefix","prefix","id","useId","idProp","uuid","useUID","useIds","prefixes","map"],"mappings":";;AAEA,SAASA,cAAT,CAAwBC,MAAxB,EAAwCC,EAAxC;AACE,SAAUD,MAAV,SAAoBC,EAApB;AACD;;SAQeC,MAAMC,QAAiBH;AACrC,MAAMI,IAAI,GAAGC,OAAM,EAAnB;AACA,MAAMJ,EAAE,GAAGE,MAAH,aAAGA,MAAH,cAAGA,MAAH,GAAaC,IAArB;AACA,SAAOJ,MAAM,GAAGD,cAAc,CAACC,MAAD,EAASC,EAAT,CAAjB,GAAgCA,EAA7C;AACD;SAiBeK,OAAOH;AACrB,MAAMF,EAAE,GAAGC,KAAK,CAACC,MAAD,CAAhB;;oCADyCI;AAAAA,IAAAA;;;AAEzC,SAAOA,QAAQ,CAACC,GAAT,CAAa,UAAAR,MAAM;AAAA,WAAID,cAAc,CAACC,MAAD,EAASC,EAAT,CAAlB;AAAA,GAAnB,CAAP;AACD;;;;"}