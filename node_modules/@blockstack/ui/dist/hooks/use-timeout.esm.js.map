{"version":3,"file":"use-timeout.esm.js","sources":["../../src/hooks/use-timeout.ts"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from 'react';\n\ninterface UseTimeoutProps {\n  onTimeout: () => void;\n  duration: number;\n}\nexport const useTimeout = ({ onTimeout, duration }: UseTimeoutProps) => {\n  const [activated, setActivated] = useState(true);\n  const timeoutRef = useRef<number | undefined>();\n\n  const stopTimeout = useCallback(() => {\n    window.clearTimeout(timeoutRef.current);\n    setActivated(false);\n  }, []);\n\n  useEffect(() => {\n    if (activated) {\n      timeoutRef.current = window.setTimeout(() => {\n        onTimeout();\n      }, duration);\n\n      return () => {\n        stopTimeout();\n      };\n    }\n    return;\n  }, [onTimeout, activated, duration, stopTimeout]);\n\n  const startTimeout = useCallback(() => {\n    setActivated(true);\n  }, []);\n\n  return {\n    stopTimeout,\n    startTimeout,\n  };\n};\n"],"names":["useTimeout","onTimeout","duration","useState","activated","setActivated","timeoutRef","useRef","stopTimeout","useCallback","window","clearTimeout","current","useEffect","setTimeout","startTimeout"],"mappings":";;IAMaA,UAAU,GAAG,SAAbA,UAAa;MAAGC,iBAAAA;MAAWC,gBAAAA;;kBACJC,QAAQ,CAAC,IAAD;MAAnCC;MAAWC;;AAClB,MAAMC,UAAU,GAAGC,MAAM,EAAzB;AAEA,MAAMC,WAAW,GAAGC,WAAW,CAAC;AAC9BC,IAAAA,MAAM,CAACC,YAAP,CAAoBL,UAAU,CAACM,OAA/B;AACAP,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAH8B,EAG5B,EAH4B,CAA/B;AAKAQ,EAAAA,SAAS,CAAC;AACR,QAAIT,SAAJ,EAAe;AACbE,MAAAA,UAAU,CAACM,OAAX,GAAqBF,MAAM,CAACI,UAAP,CAAkB;AACrCb,QAAAA,SAAS;AACV,OAFoB,EAElBC,QAFkB,CAArB;AAIA,aAAO;AACLM,QAAAA,WAAW;AACZ,OAFD;AAGD;;AACD;AACD,GAXQ,EAWN,CAACP,SAAD,EAAYG,SAAZ,EAAuBF,QAAvB,EAAiCM,WAAjC,CAXM,CAAT;AAaA,MAAMO,YAAY,GAAGN,WAAW,CAAC;AAC/BJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,SAAO;AACLG,IAAAA,WAAW,EAAXA,WADK;AAELO,IAAAA,YAAY,EAAZA;AAFK,GAAP;AAID;;;;"}