{"version":3,"file":"use-merge-refs.esm.js","sources":["../../src/hooks/use-merge-refs.ts"],"sourcesContent":["import * as React from 'react';\n\ntype ReactRef<T> = React.Ref<T> | React.RefObject<T> | React.MutableRefObject<T>;\n\nexport function assignRef<T = any>(ref: ReactRef<T>, value: T) {\n  if (ref == null) return;\n  if (typeof ref === 'function') {\n    ref(value);\n  } else {\n    try {\n      (ref as React.MutableRefObject<T>).current = value;\n    } catch (error) {\n      throw new Error(`Cannot assign value \"${value}\" to ref \"${ref}\"`);\n    }\n  }\n}\n\nexport function useMergeRefs<T>(...refs: (ReactRef<T> | undefined)[]) {\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return (node: T) => {\n      refs.forEach(ref => {\n        if (ref) assignRef(ref, node);\n      });\n    };\n  }, refs);\n}\n"],"names":["assignRef","ref","value","current","error","Error","useMergeRefs","refs","React","every","node","forEach"],"mappings":";;SAIgBA,UAAmBC,KAAkBC;AACnD,MAAID,GAAG,IAAI,IAAX,EAAiB;;AACjB,MAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,IAAAA,GAAG,CAACC,KAAD,CAAH;AACD,GAFD,MAEO;AACL,QAAI;AACDD,MAAAA,GAAiC,CAACE,OAAlC,GAA4CD,KAA5C;AACF,KAFD,CAEE,OAAOE,KAAP,EAAc;AACd,YAAM,IAAIC,KAAJ,4BAAkCH,KAAlC,oBAAoDD,GAApD,QAAN;AACD;AACF;AACF;SAEeK;oCAAmBC;AAAAA,IAAAA;;;AACjC,SAAOC,OAAA,CAAc;AACnB,QAAID,IAAI,CAACE,KAAL,CAAW,UAAAR,GAAG;AAAA,aAAIA,GAAG,IAAI,IAAX;AAAA,KAAd,CAAJ,EAAoC;AAClC,aAAO,IAAP;AACD;;AACD,WAAO,UAACS,IAAD;AACLH,MAAAA,IAAI,CAACI,OAAL,CAAa,UAAAV,GAAG;AACd,YAAIA,GAAJ,EAASD,SAAS,CAACC,GAAD,EAAMS,IAAN,CAAT;AACV,OAFD;AAGD,KAJD;AAKD,GATM,EASJH,IATI,CAAP;AAUD;;;;"}