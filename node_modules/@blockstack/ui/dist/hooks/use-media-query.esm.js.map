{"version":3,"file":"use-media-query.esm.js","sources":["../../src/hooks/use-media-query.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useSafeLayoutEffect } from '../hooks';\n\nconst isBrowser = typeof window !== 'undefined';\n\nconst isSupported = (api: string) => isBrowser && api in window;\n\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\nexport function useMediaQuery(query: string) {\n  const [matches, setMatches] = React.useState(() => {\n    if (!isSupported('matchMedia')) return false;\n    return window.matchMedia(query).matches;\n  });\n\n  useSafeLayoutEffect(() => {\n    if (!isSupported('matchMedia')) return;\n\n    const mediaQueryList = window.matchMedia(query);\n    const listener = () => setMatches(mediaQueryList.matches);\n\n    mediaQueryList.addListener(listener);\n\n    listener();\n\n    return () => {\n      mediaQueryList.removeListener(listener);\n    };\n  }, [query]);\n\n  return [matches, setMatches] as const;\n}\n"],"names":["isBrowser","window","isSupported","api","useMediaQuery","query","React","matchMedia","matches","setMatches","useSafeLayoutEffect","mediaQueryList","listener","addListener","removeListener"],"mappings":";;;;;;;;;;;;;;AAGA,IAAMA,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAApC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD;AAAA,SAAiBH,SAAS,IAAIG,GAAG,IAAIF,MAArC;AAAA,CAApB;;SAOgBG,cAAcC;wBACEC,QAAA,CAAe;AAC3C,QAAI,CAACJ,WAAW,CAAC,YAAD,CAAhB,EAAgC,OAAO,KAAP;AAChC,WAAOD,MAAM,CAACM,UAAP,CAAkBF,KAAlB,EAAyBG,OAAhC;AACD,GAH6B;MAAvBA;MAASC;;AAKhBC,EAAAA,mBAAmB,CAAC;AAClB,QAAI,CAACR,WAAW,CAAC,YAAD,CAAhB,EAAgC;AAEhC,QAAMS,cAAc,GAAGV,MAAM,CAACM,UAAP,CAAkBF,KAAlB,CAAvB;;AACA,QAAMO,QAAQ,GAAG,SAAXA,QAAW;AAAA,aAAMH,UAAU,CAACE,cAAc,CAACH,OAAhB,CAAhB;AAAA,KAAjB;;AAEAG,IAAAA,cAAc,CAACE,WAAf,CAA2BD,QAA3B;AAEAA,IAAAA,QAAQ;AAER,WAAO;AACLD,MAAAA,cAAc,CAACG,cAAf,CAA8BF,QAA9B;AACD,KAFD;AAGD,GAbkB,EAahB,CAACP,KAAD,CAbgB,CAAnB;AAeA,SAAO,CAACG,OAAD,EAAUC,UAAV,CAAP;AACD;;;;"}