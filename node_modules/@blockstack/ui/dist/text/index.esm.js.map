{"version":3,"file":"index.esm.js","sources":["../../src/text/index.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { PseudoBox, PseudoBoxProps } from '../pseudo-box';\n\n// if nothing is passed for the prop `textStyle`, we will assume styles for various dom elements\nconst assumeTextStyle = (as: string | React.ElementType) => {\n  switch (as) {\n    case 'h1':\n      return 'display.large';\n    case 'h2':\n      return 'display.small';\n    case 'h3':\n      return 'body.large.medium';\n    default:\n      return undefined;\n  }\n};\nconst Text = forwardRef<any, PseudoBoxProps>(({ textStyle, as = 'span', ...rest }, ref) => {\n  return (\n    <PseudoBox\n      ref={ref}\n      as={as}\n      whiteSpace=\"unset\"\n      display=\"inline\"\n      textStyle={textStyle || assumeTextStyle(as)}\n      {...rest}\n    />\n  );\n});\n\nText.displayName = 'Text';\n\nexport { Text };\n"],"names":["assumeTextStyle","as","undefined","Text","forwardRef","ref","textStyle","rest","React","PseudoBox","whiteSpace","display","displayName"],"mappings":";;;;AAIA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD;AACtB,UAAQA,EAAR;AACE,SAAK,IAAL;AACE,aAAO,eAAP;;AACF,SAAK,IAAL;AACE,aAAO,eAAP;;AACF,SAAK,IAAL;AACE,aAAO,mBAAP;;AACF;AACE,aAAOC,SAAP;AARJ;AAUD,CAXD;;IAYMC,IAAI,gBAAGC,UAAU,CAAsB,gBAAsCC,GAAtC;MAAGC,iBAAAA;qBAAWL;MAAAA,0BAAK;MAAWM;;AACzE,SACEC,4BAAA,CAACC,GAAD;AACEJ,IAAAA,GAAG,EAAEA;AACLJ,IAAAA,EAAE,EAAEA;AACJS,IAAAA,UAAU,EAAC;AACXC,IAAAA,OAAO,EAAC;AACRL,IAAAA,SAAS,EAAEA,SAAS,IAAIN,eAAe,CAACC,EAAD;KACnCM,KANN,CADF;AAUD,CAXsB;AAavBJ,IAAI,CAACS,WAAL,GAAmB,MAAnB;;;;"}