{"version":3,"file":"index.esm.js","sources":["../../src/utils/index.tsx"],"sourcesContent":["import React from 'react';\n\nlet _window: Window | undefined = undefined;\n\n// Note: Accessing \"window\" in IE11 is somewhat expensive, and calling \"typeof window\"\n// hits a memory leak, whereas aliasing it and calling \"typeof _window\" does not.\n// Caching the window value at the file scope lets us minimize the impact.\ntry {\n  _window = window;\n} catch (e) {\n  /* no-op */\n}\n\n/**\n * Helper to get the window object. The helper will make sure to use a cached variable\n * of \"window\", to avoid overhead and memory leaks in IE11.\n */\nexport function getWindow(node?: HTMLElement | null): Window | undefined {\n  return node?.ownerDocument?.defaultView ?? _window;\n}\n\n/**\n * Check if we can use the DOM. Useful for SSR purposes\n */\nfunction checkIsBrowser() {\n  const _window = getWindow();\n  return Boolean(\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    typeof _window !== 'undefined' && _window.document && _window.document.createElement\n  );\n}\n\nexport const isBrowser = checkIsBrowser();\n\nexport function isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n\nexport interface CreateContextOptions {\n  /**\n   * If `true`, React will throw if context is `null` or `undefined`\n   * In some cases, you might want to support nested context, so you can set it to `false`\n   */\n  strict?: boolean;\n  /**\n   * Error message to throw if the context is `undefined`\n   */\n  errorMessage?: string;\n  /**\n   * The display name of the context\n   */\n  name?: string;\n}\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n\n/**\n * Creates a named context, provider, and hook.\n *\n * @param options create context options\n */\nexport function createContext<ContextType>(options: CreateContextOptions = {}) {\n  const {\n    strict = true,\n    errorMessage = 'useContext must be inside a Provider with a value',\n    name,\n  } = options;\n\n  const Context = React.createContext<ContextType | undefined>(undefined);\n\n  Context.displayName = name;\n\n  function useContext() {\n    const context = React.useContext(Context);\n    if (!context && strict) throw new Error(errorMessage);\n    return context;\n  }\n\n  return [Context.Provider, useContext, Context] as CreateContextReturn<ContextType>;\n}\n\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\nexport function getValidChildren(children: React.ReactNode) {\n  return React.Children.toArray(children).filter(child =>\n    React.isValidElement(child)\n  ) as React.ReactElement[];\n}\n\ntype ReactRef<T> = React.Ref<T> | React.RefObject<T> | React.MutableRefObject<T>;\n\n/**\n * Assigns a value to a ref function or object\n *\n * @param ref the ref to assign to\n * @param value the value\n */\nexport function assignRef<T = any>(ref: ReactRef<T> | undefined, value: T) {\n  if (ref == null) return;\n\n  if (isFunction(ref)) {\n    ref(value);\n    return;\n  }\n\n  try {\n    (ref as React.MutableRefObject<T>).current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\n\n/**\n * Combine multiple React refs into a single ref function.\n * This is used mostly when you need to allow consumers forward refs to\n * internal components\n *\n * @param refs refs to assign to value to\n */\nexport function mergeRefs<T>(...refs: (ReactRef<T> | undefined)[]) {\n  return (value: T) => {\n    refs.forEach(ref => assignRef(ref, value));\n  };\n}\n\nexport function genId(prefix: string) {\n  return `${prefix}-${Math.random().toString(32).substr(2, 8)}`;\n}\n\nexport const makeId = (id: string, index: number) => `${id}:${index}`;\n\nconst focusableElList = [\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'embed',\n  'iframe',\n  'input:not([disabled])',\n  'object',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  '*[tabindex]:not([aria-disabled])',\n  '*[contenteditable]',\n];\n\nconst focusableElSelector = focusableElList.join();\n\nexport function getFocusables(element: HTMLElement, keyboardOnly = false) {\n  let focusableEls = Array.from(element.querySelectorAll(focusableElSelector));\n\n  // filter out elements with display: none\n  focusableEls = focusableEls.filter(\n    focusableEl => window.getComputedStyle(focusableEl).display !== 'none'\n  );\n\n  if (keyboardOnly) {\n    focusableEls = focusableEls.filter(\n      focusableEl => focusableEl.getAttribute('tabindex') !== '-1'\n    );\n  }\n\n  return focusableEls;\n}\n\n/// Evaluate color in theme object\n\nconst colorKeyInTheme = (theme: any, color: string) => color in theme.colors;\n\nconst colorHueValue = (theme: any, color: string) => {\n  const hasDot = color.search('.') !== -1;\n  if (hasDot) {\n    const [colorName, hue] = color.split('.');\n\n    if (colorKeyInTheme(theme, colorName)) {\n      return theme.colors[colorName][hue];\n    }\n  }\n  return null;\n};\n\nexport const getColorInTheme = (theme: any, color: string) => {\n  if (colorKeyInTheme(theme, color)) {\n    return theme.colors[color][500];\n  }\n\n  if (colorHueValue(theme, color)) {\n    return colorHueValue(theme, color);\n  }\n\n  return color;\n};\n\nexport const __DEV__ = process.env.NODE_ENV !== 'production';\n\nexport function runIfFn<T, U>(valueOrFn: T | ((...args: U[]) => T), ...args: U[]): T {\n  return isFunction(valueOrFn) ? valueOrFn(...args) : valueOrFn;\n}\n\nexport function warn(options: { condition: boolean; message: string }) {\n  if (options.condition && __DEV__) {\n    console.warn(options.message);\n  }\n}\n\nexport function error(options: { condition: boolean; message: string }) {\n  if (options.condition && __DEV__) {\n    console.error(options.message);\n  }\n}\n\nexport type FunctionArguments<T extends Function> = T extends (...args: infer R) => any ? R : never;\n\nexport function callAllHandlers<T extends (event: any) => void>(...fns: (T | undefined)[]) {\n  return function (event: FunctionArguments<T>[0]) {\n    fns.some(fn => {\n      fn && fn(event);\n      return event && event.defaultPrevented;\n    });\n  };\n}\n\nexport type Merge<T1, T2> = Omit<T1, Extract<keyof T1, keyof T2>> & T2;\n\nexport type SafeMerge<T, P> = P & Omit<T, keyof P>;\n\nexport type UnionStringArray<T extends Readonly<string[]>> = T[number];\n\nexport type Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\n\nexport type As<P = any> = React.ReactType<P>;\n\nexport type AnyFunction<T = any> = (...args: T[]) => any;\n\nexport type Dict<T = any> = Record<string, T>;\n\nexport type ReactNodeOrRenderProp<P> = React.ReactNode | ((props: P) => React.ReactNode);\n\nexport type Booleanish = boolean | 'true' | 'false';\n\nexport type ObjectOrArray<T, K extends keyof any = keyof any> = T[] | Record<K, T>;\n\nexport type StringOrNumber = string | number;\n\n// Number assertions\nexport function isNumber(value: any): value is number {\n  return typeof value === 'number';\n}\n\nexport const isNotNumber = (value: any) =>\n  typeof value !== 'number' || isNaN(value) || !isFinite(value);\n\nexport function isNumeric(value: any) {\n  return value != null && value - parseFloat(value) + 1 >= 0;\n}\n\n// Array assertions\nexport function isArray<T>(value: any): value is T[] {\n  return Array.isArray(value);\n}\n\nexport const isEmptyArray = (value: any) => isArray(value) && value.length === 0;\n\n// Generic assertions\nexport const isDefined = (value: any) => typeof value !== 'undefined' && value !== undefined;\n\nexport const isUndefined = (value: any): value is undefined =>\n  typeof value === 'undefined' || value === undefined;\n\n// Object assertions\nexport const isObject = (value: any): value is Dict => {\n  const type = typeof value;\n  return value != null && (type === 'object' || type === 'function') && !isArray(value);\n};\n\nexport const isEmptyObject = (value: any) => isObject(value) && Object.keys(value).length === 0;\n\nexport const isNull = (value: any): value is null => value == null;\n\n// String assertions\nexport function isString(value: any): value is string {\n  return Object.prototype.toString.call(value) === '[object String]';\n}\n\n// Empty assertions\nexport const isEmpty = (value: any) => {\n  if (isArray(value)) return isEmptyArray(value);\n  if (isObject(value)) return isEmptyObject(value);\n  return value == null || value === '';\n};\n\nexport function omit<T extends Dict, K extends keyof T>(object: T, keys: K[]) {\n  const result: Dict = {};\n\n  for (const key in object) {\n    if (keys.includes(key as any)) continue;\n    result[key] = object[key];\n  }\n\n  return result as Omit<T, K>;\n}\n\nexport function pick<T extends Dict, K extends keyof T>(object: T, keys: K[]) {\n  const result = {} as { [P in K]: T[P] };\n  for (const key of keys) {\n    if (key in object) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\n\nexport function split<T extends Dict, K extends keyof T>(object: T, keys: K[]) {\n  const picked: Dict = {};\n  const omitted: Dict = {};\n\n  for (const key in object) {\n    if (keys.includes(key as T[K])) {\n      picked[key] = object[key];\n    } else {\n      omitted[key] = object[key];\n    }\n  }\n\n  return [picked, omitted] as [{ [P in K]: T[P] }, Omit<T, K>];\n}\n\n/**\n * Get value from a deeply nested object using a string path\n * @param obj - the object\n * @param path - the string path\n * @param fallback\n * @param index\n */\nexport function get(obj: any, path: string | number, fallback?: any, index?: number) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  //@ts-ignore\n  path = (path?.split?.('.') ?? [path]) as string;\n  for (index = 0; index < path.length; index++) {\n    obj = obj ? obj[path[index]] : undefined;\n  }\n  return obj === undefined ? fallback : obj;\n}\n\n/**\n * Get value from deeply nested object, based on path\n * It returns the path value if not found in object\n *\n * @param path - the string path or value\n * @param scale - the string path or value\n */\nexport function getWithDefault(path: any, scale: any) {\n  return get(scale, path, path);\n}\n\nexport function mapResponsive(prop: any, mapper: (val: any) => any) {\n  if (isArray(prop)) {\n    return prop.map(mapper);\n  }\n\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result: Dict, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n\n  if (prop != null) {\n    return mapper(prop);\n  }\n\n  return null;\n}\n\nexport const startPad = (n: number, z = 2, s = '0') =>\n  (n + '').length <= z ? ['', '-'][+(n < 0)] + (s.repeat(z) + Math.abs(n)).slice(-1 * z) : n + '';\n"],"names":["_window","undefined","window","e","getWindow","node","ownerDocument","defaultView","checkIsBrowser","Boolean","document","createElement","isBrowser","isFunction","value","createContext","options","strict","errorMessage","name","Context","React","displayName","useContext","context","Error","Provider","assignRef","ref","current","error","mergeRefs","refs","forEach","__DEV__","process","env","NODE_ENV","runIfFn","valueOrFn","args","warn","condition","console","message","callAllHandlers","fns","event","some","fn","defaultPrevented","isString","Object","prototype","toString","call","omit","object","keys","result","key","includes","pick","startPad","n","z","s","length","repeat","Math","abs","slice"],"mappings":"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"}