{"version":3,"file":"index.esm.js","sources":["../../src/highlighter/index.tsx"],"sourcesContent":["import React from 'react';\nimport Highlight from 'prism-react-renderer';\nimport { Box } from '../box';\nimport { Flex } from '../flex';\nimport { startPad } from '../utils';\nimport { useTheme } from '../hooks';\n\nimport { GrammaticalToken, GetGrammaticalTokenProps, RenderProps, Language } from './types';\nimport { theme } from './prism-theme';\nimport './clarity';\n\nexport * from './types';\n\nconst lineNumberWidth = 60;\nconst getLineNumber = (n: number, length: number) => startPad(n + 1, length.toString().length);\n\nconst Tokens = ({\n  tokens,\n  getTokenProps,\n  showLineNumbers,\n  ...rest\n}: {\n  tokens: GrammaticalToken[];\n  getTokenProps: GetGrammaticalTokenProps;\n  showLineNumbers?: boolean;\n}) => {\n  const bsTheme = useTheme();\n  const pl = `calc(${showLineNumbers ? lineNumberWidth : '0'}px + ${\n    (bsTheme as any).sizes['base'] || '16px'\n  })`;\n\n  return (\n    <Box pl={pl} pr=\"base\" position=\"relative\" zIndex={2} {...rest}>\n      {tokens.map((token, key) => (\n        <Box py=\"2px\" display=\"inline-block\" {...getTokenProps({ token, key })} />\n      ))}\n    </Box>\n  );\n};\nconst LineNumber = ({ number, length, ...rest }: { number: number; length: number }) => (\n  <Flex\n    textAlign=\"right\"\n    pr=\"base\"\n    pl=\"base\"\n    width={lineNumberWidth}\n    borderRight=\"1px solid\"\n    borderRightColor=\"inherit\"\n    color=\"ink.400\"\n    flexShrink={0}\n    style={{ userSelect: 'none' }}\n    position=\"absolute\"\n    left={0}\n    height=\"100%\"\n    align=\"baseline\"\n    justify=\"center\"\n    zIndex={1}\n    {...rest}\n  >\n    {getLineNumber(number, length)}\n  </Flex>\n);\n\nconst Line = ({\n  tokens,\n  getTokenProps,\n  index,\n  length,\n  showLineNumbers,\n  hideLineHover,\n  ...rest\n}: {\n  tokens: GrammaticalToken[];\n  index: number;\n  length: number;\n  getTokenProps: GetGrammaticalTokenProps;\n  showLineNumbers?: boolean;\n  hideLineHover?: boolean;\n}) => {\n  return (\n    <Flex\n      height=\"loose\"\n      align=\"baseline\"\n      borderColor=\"ink.900\"\n      _hover={\n        hideLineHover\n          ? undefined\n          : { bg: ['unset', 'unset', 'ink.900'], borderColor: ['ink.900', 'ink.900', 'ink.600'] }\n      }\n      position=\"relative\"\n      {...rest}\n    >\n      {showLineNumbers ? <LineNumber number={index} length={length} /> : null}\n      <Tokens showLineNumbers={showLineNumbers} getTokenProps={getTokenProps} tokens={tokens} />\n    </Flex>\n  );\n};\n\nconst Lines = ({\n  tokens: lines,\n  getLineProps,\n  getTokenProps,\n  className,\n  showLineNumbers,\n  hideLineHover,\n}: { showLineNumbers?: boolean; hideLineHover?: boolean } & RenderProps) => {\n  return (\n    <Box display=\"block\" className={className}>\n      <Box display=\"block\" style={{ fontFamily: 'Fira Code' }}>\n        {lines.map((tokens, i) => (\n          <Line\n            index={i}\n            tokens={tokens}\n            getTokenProps={getTokenProps}\n            length={lines.length + 1}\n            showLineNumbers={showLineNumbers}\n            hideLineHover={hideLineHover || lines.length < 3}\n            {...getLineProps({ line: tokens, key: i })}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\ntype PrismToken = {\n  type: string;\n  content: (PrismToken | string)[] | string;\n};\ntype PrismGrammar = {\n  [key: string]: any;\n};\ntype LanguageDict = { [lang in Language]: PrismGrammar };\ntype PrismLib = {\n  languages: LanguageDict;\n  tokenize: (code: string, grammar: PrismGrammar, language: Language) => PrismToken[] | string[];\n  highlight: (code: string, grammar: PrismGrammar, language: Language) => string;\n};\n\nexport interface HighlighterProps {\n  code: string;\n  language?: Language;\n  showLineNumbers?: boolean;\n  hideLineHover?: boolean;\n  Prism: PrismLib;\n}\n\nexport const Highlighter = React.memo(\n  ({ code, language = 'clarity', showLineNumbers, hideLineHover, Prism }: HighlighterProps) => {\n    return (\n      <Highlight theme={theme} code={code} language={language as any} Prism={Prism as any}>\n        {props => (\n          <Lines showLineNumbers={showLineNumbers} hideLineHover={hideLineHover} {...props} />\n        )}\n      </Highlight>\n    );\n  }\n);\n\nHighlighter.displayName = 'Highlighter';\n"],"names":["lineNumberWidth","getLineNumber","n","length","startPad","toString","Tokens","tokens","getTokenProps","showLineNumbers","rest","bsTheme","useTheme","pl","sizes","React","Box","pr","position","zIndex","map","token","key","py","display","LineNumber","number","Flex","textAlign","width","borderRight","borderRightColor","color","flexShrink","style","userSelect","left","height","align","justify","Line","index","hideLineHover","borderColor","_hover","undefined","bg","Lines","lines","getLineProps","className","fontFamily","i","line","Highlighter","memo","code","language","Prism","Highlight","theme","props","displayName"],"mappings":"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"}