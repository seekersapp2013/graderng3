{"version":3,"file":"index.esm.js","sources":["../../src/spinner/index.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Box } from '../box';\nimport { VisuallyHidden } from '../visually-hidden';\nimport { SpinnerProps, SpinnerSize } from './types';\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst StyledBox = styled(Box)`\n  animation: ${spin} ${(props: SpinnerProps) => props.speed} linear infinite;\n`;\n\nconst getSize = (size: SpinnerSize): string => {\n  switch (size) {\n    case 'xs':\n      return '0.75rem';\n    case 'sm':\n      return '1rem';\n    case 'md':\n      return '1.5rem';\n    case 'lg':\n      return '2rem';\n    case 'xl':\n      return '3rem';\n    default:\n      return size;\n  }\n};\n\n/**\n * Spinner is used for indicating a loading state of a component or page.\n *\n * RECOMMENDED: Add `aria-busy=\"true\"` to the component that triggered the loading state while the spinner is shown.\n */\nconst Spinner = forwardRef<any, SpinnerProps>(\n  (\n    {\n      size = 'md',\n      label = 'Loading...',\n      thickness = '2px',\n      speed = '0.85s',\n      color,\n      emptyColor = 'transparent',\n      ...props\n    },\n    ref\n  ) => {\n    const _size = getSize(size);\n\n    return (\n      <StyledBox\n        ref={ref}\n        display=\"inline-block\"\n        borderWidth={thickness}\n        borderColor=\"currentColor\"\n        borderBottomColor={emptyColor}\n        borderLeftColor={emptyColor}\n        borderRadius=\"100%\"\n        speed={speed}\n        color={color}\n        size={_size}\n        {...props}\n      >\n        {label && <VisuallyHidden>{label}</VisuallyHidden>}\n      </StyledBox>\n    );\n  }\n);\n\nSpinner.displayName = 'Spinner';\n\nexport { Spinner };\n"],"names":["spin","keyframes","StyledBox","styled","Box","props","speed","getSize","size","Spinner","forwardRef","ref","label","thickness","color","emptyColor","_size","React","display","borderWidth","borderColor","borderBottomColor","borderLeftColor","borderRadius","VisuallyHidden","displayName"],"mappings":";;;;;;;;;;;;;;;AAMA,IAAMA,IAAI,gBAAGC,SAAH,gEAAV;AASA,IAAMC,SAAS,gBAAGC,MAAM,CAACC,GAAD,CAAT,kCACAJ,IADA,EACQ,UAACK,KAAD;AAAA,SAAyBA,KAAK,CAACC,KAA/B;AAAA,CADR,CAAf;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AACd,UAAQA,IAAR;AACE,SAAK,IAAL;AACE,aAAO,SAAP;;AACF,SAAK,IAAL;AACE,aAAO,MAAP;;AACF,SAAK,IAAL;AACE,aAAO,QAAP;;AACF,SAAK,IAAL;AACE,aAAO,MAAP;;AACF,SAAK,IAAL;AACE,aAAO,MAAP;;AACF;AACE,aAAOA,IAAP;AAZJ;AAcD,CAfD;;IAsBMC,OAAO,gBAAGC,UAAU,CACxB,gBAUEC,GAVF;uBAEIH;MAAAA,8BAAO;wBACPI;MAAAA,gCAAQ;4BACRC;MAAAA,wCAAY;wBACZP;MAAAA,gCAAQ;MACRQ,aAAAA;6BACAC;MAAAA,0CAAa;MACVV;;AAIL,MAAMW,KAAK,GAAGT,OAAO,CAACC,IAAD,CAArB;;AAEA,SACES,4BAAA,CAACf,SAAD;AACES,IAAAA,GAAG,EAAEA;AACLO,IAAAA,OAAO,EAAC;AACRC,IAAAA,WAAW,EAAEN;AACbO,IAAAA,WAAW,EAAC;AACZC,IAAAA,iBAAiB,EAAEN;AACnBO,IAAAA,eAAe,EAAEP;AACjBQ,IAAAA,YAAY,EAAC;AACbjB,IAAAA,KAAK,EAAEA;AACPQ,IAAAA,KAAK,EAAEA;AACPN,IAAAA,IAAI,EAAEQ;KACFX,MAXN,EAaGO,KAAK,IAAIK,4BAAA,CAACO,cAAD,MAAA,EAAiBZ,KAAjB,CAbZ,CADF;AAiBD,CAhCuB;AAmC1BH,OAAO,CAACgB,WAAR,GAAsB,SAAtB;;;;"}