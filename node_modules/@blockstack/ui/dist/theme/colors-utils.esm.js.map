{"version":3,"file":"colors-utils.esm.js","sources":["../../src/theme/colors-utils.ts"],"sourcesContent":["import { css } from 'styled-components';\nimport Color from 'color';\n\nexport const get = (color: string, hue: string) => `${color}.${hue}`;\n\nexport const addOpacity = (color: string, opacity: number) =>\n  Color(color)\n    .fade(1 - opacity)\n    .rgb()\n    .string();\n\nexport const addWhite = (color: string, opacity: number) => {\n  return Color(color).mix(Color('#fff'), opacity).hex();\n};\n\nexport const addBlack = (color: string, opacity: number) =>\n  Color(color).mix(Color('#000'), opacity).hex();\n\nexport const isDarkColor = (color: string) => Color(color).isDark();\n\nexport const generateAlphaColors = (color: string) => ({\n  900: addOpacity(color, 0.92),\n  800: addOpacity(color, 0.8),\n  700: addOpacity(color, 0.6),\n  600: addOpacity(color, 0.48),\n  500: addOpacity(color, 0.38),\n  400: addOpacity(color, 0.24),\n  300: addOpacity(color, 0.16),\n  200: addOpacity(color, 0.12),\n  100: addOpacity(color, 0.08),\n  50: addOpacity(color, 0.04),\n});\n\nexport type Emphasis = 'high' | 'medium' | 'low' | 'lowest';\n\nexport const colorEmphasis = (color: string, emphasis: Emphasis) => {\n  switch (emphasis) {\n    case 'high':\n      return color;\n    case 'medium':\n      return generateAlphaColors(color)[700];\n    case 'low':\n      return generateAlphaColors(color)[500];\n    case 'lowest':\n      return generateAlphaColors(color)[300];\n    default:\n      return undefined;\n  }\n};\n\nexport const generateStripe = ({ size = '1rem', color = 'rgba(255, 255, 255, 0.15)' }) => css`\n  background-image: linear-gradient(\n    45deg,\n    ${color} 25%,\n    transparent 25%,\n    transparent 50%,\n    ${color} 50%,\n    ${color} 75%,\n    transparent 75%,\n    transparent\n  );\n  background-size: ${size} ${size};\n`;\n"],"names":["get","color","hue","addOpacity","opacity","Color","fade","rgb","string","addWhite","mix","hex","addBlack","isDarkColor","isDark","generateAlphaColors","colorEmphasis","emphasis","undefined","generateStripe","size","css"],"mappings":";;;IAGaA,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAgBC,GAAhB;AAAA,SAAmCD,KAAnC,SAA4CC,GAA5C;AAAA;IAENC,UAAU,GAAG,SAAbA,UAAa,CAACF,KAAD,EAAgBG,OAAhB;AAAA,SACxBC,KAAK,CAACJ,KAAD,CAAL,CACGK,IADH,CACQ,IAAIF,OADZ,EAEGG,GAFH,GAGGC,MAHH,EADwB;AAAA;IAMbC,QAAQ,GAAG,SAAXA,QAAW,CAACR,KAAD,EAAgBG,OAAhB;AACtB,SAAOC,KAAK,CAACJ,KAAD,CAAL,CAAaS,GAAb,CAAiBL,KAAK,CAAC,MAAD,CAAtB,EAAgCD,OAAhC,EAAyCO,GAAzC,EAAP;AACD;IAEYC,QAAQ,GAAG,SAAXA,QAAW,CAACX,KAAD,EAAgBG,OAAhB;AAAA,SACtBC,KAAK,CAACJ,KAAD,CAAL,CAAaS,GAAb,CAAiBL,KAAK,CAAC,MAAD,CAAtB,EAAgCD,OAAhC,EAAyCO,GAAzC,EADsB;AAAA;IAGXE,WAAW,GAAG,SAAdA,WAAc,CAACZ,KAAD;AAAA,SAAmBI,KAAK,CAACJ,KAAD,CAAL,CAAaa,MAAb,EAAnB;AAAA;IAEdC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACd,KAAD;AAAA,SAAoB;AACrD,SAAKE,UAAU,CAACF,KAAD,EAAQ,IAAR,CADsC;AAErD,SAAKE,UAAU,CAACF,KAAD,EAAQ,GAAR,CAFsC;AAGrD,SAAKE,UAAU,CAACF,KAAD,EAAQ,GAAR,CAHsC;AAIrD,SAAKE,UAAU,CAACF,KAAD,EAAQ,IAAR,CAJsC;AAKrD,SAAKE,UAAU,CAACF,KAAD,EAAQ,IAAR,CALsC;AAMrD,SAAKE,UAAU,CAACF,KAAD,EAAQ,IAAR,CANsC;AAOrD,SAAKE,UAAU,CAACF,KAAD,EAAQ,IAAR,CAPsC;AAQrD,SAAKE,UAAU,CAACF,KAAD,EAAQ,IAAR,CARsC;AASrD,SAAKE,UAAU,CAACF,KAAD,EAAQ,IAAR,CATsC;AAUrD,QAAIE,UAAU,CAACF,KAAD,EAAQ,IAAR;AAVuC,GAApB;AAAA;IAetBe,aAAa,GAAG,SAAhBA,aAAgB,CAACf,KAAD,EAAgBgB,QAAhB;AAC3B,UAAQA,QAAR;AACE,SAAK,MAAL;AACE,aAAOhB,KAAP;;AACF,SAAK,QAAL;AACE,aAAOc,mBAAmB,CAACd,KAAD,CAAnB,CAA2B,GAA3B,CAAP;;AACF,SAAK,KAAL;AACE,aAAOc,mBAAmB,CAACd,KAAD,CAAnB,CAA2B,GAA3B,CAAP;;AACF,SAAK,QAAL;AACE,aAAOc,mBAAmB,CAACd,KAAD,CAAnB,CAA2B,GAA3B,CAAP;;AACF;AACE,aAAOiB,SAAP;AAVJ;AAYD;IAEYC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,uBAAGC,IAAH;AAAA,MAAGA,IAAH,0BAAU,MAAV;AAAA,wBAAkBnB,KAAlB;AAAA,MAAkBA,KAAlB,2BAA0B,2BAA1B;AAAA,SAA4DoB,GAA5D,kKAGxBpB,KAHwB,EAMxBA,KANwB,EAOxBA,KAPwB,EAWTmB,IAXS,EAWDA,IAXC;AAAA;;;;"}