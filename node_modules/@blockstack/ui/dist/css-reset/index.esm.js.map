{"version":3,"file":"index.esm.js","sources":["../../src/css-reset/index.tsx"],"sourcesContent":["import styled, { createGlobalStyle, css } from 'styled-components';\nimport preflight from './preflight';\nimport { theme } from '../theme/theme';\n\n// Should type as theme here, however this type\n// has optional properties. Need to enforce type to ensure\n// these values are defined\nconst defaultConfig = (theme: any) => ({\n  light: {\n    color: theme.colors.ink[900],\n    bg: undefined as any,\n    borderColor: '#E5E5EC', // TODO: replace this with theme color\n    placeholderColor: theme.colors.ink[400],\n  },\n  dark: {\n    color: 'white',\n    bg: theme.colors.ink[900],\n    borderColor: theme.colors.ink[600],\n    placeholderColor: theme.colors.ink[500],\n  },\n});\n\nconst { color, bg, borderColor, placeholderColor } = defaultConfig(theme).light;\n\nconst cssReset = css`\n  ${preflight};\n\n  html {\n    line-height: 1.5;\n    color: ${color};\n    background-color: ${bg};\n    font-family: ${theme && theme.fonts && theme.fonts.body};\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    border-width: 0;\n    border-style: solid;\n    border-color: ${borderColor};\n  }\n\n  input:-ms-input-placeholder,\n  textarea:-ms-input-placeholder {\n    color: ${placeholderColor};\n  }\n\n  input::-ms-input-placeholder,\n  textarea::-ms-input-placeholder {\n    color: ${placeholderColor};\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${placeholderColor};\n  }\n`;\n\nconst CSSReset = createGlobalStyle`${cssReset}`;\n\nconst ScopedCSSReset = styled.div`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    border-color: ${borderColor};\n  }\n\n  input:-ms-input-placeholder,\n  textarea:-ms-input-placeholder {\n    color: ${placeholderColor};\n  }\n\n  input::-ms-input-placeholder,\n  textarea::-ms-input-placeholder {\n    color: ${placeholderColor};\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${placeholderColor};\n  }\n\n  body,\n  div,\n  span {\n    text-align: initial;\n    font-family: ${theme && theme.fonts && theme.fonts.body};\n  }\n`;\n\nexport { CSSReset, ScopedCSSReset };\n"],"names":["defaultConfig","theme","light","color","colors","ink","bg","undefined","borderColor","placeholderColor","dark","cssReset","css","preflight","fonts","body","CSSReset","createGlobalStyle","ScopedCSSReset","styled","div"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAAiB;AACrCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,GAAjB,CADF;AAELC,MAAAA,EAAE,EAAEC,SAFC;AAGLC,MAAAA,WAAW,EAAE,SAHR;AAILC,MAAAA,gBAAgB,EAAER,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,GAAjB;AAJb,KAD8B;AAOrCK,IAAAA,IAAI,EAAE;AACJP,MAAAA,KAAK,EAAE,OADH;AAEJG,MAAAA,EAAE,EAAEL,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,GAAjB,CAFA;AAGJG,MAAAA,WAAW,EAAEP,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,GAAjB,CAHT;AAIJI,MAAAA,gBAAgB,EAAER,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,GAAjB;AAJd;AAP+B,GAAjB;AAAA,CAAtB;;wCAeqDL,aAAa,CAACC,KAAD,CAAb,CAAqBC;IAAlEC,6BAAAA;IAAOG,0BAAAA;IAAIE,mCAAAA;IAAaC,wCAAAA;AAEhC,IAAME,QAAQ,gBAAGC,GAAH,yXACVC,SADU,EAKDV,KALC,EAMUG,EANV,EAOKL,KAAK,IAAIA,KAAK,CAACa,KAAf,IAAwBb,KAAK,CAACa,KAAN,CAAYC,IAPzC,EAgBMP,WAhBN,EAqBDC,gBArBC,EA0BDA,gBA1BC,EA+BDA,gBA/BC,CAAd;IAmCMO,QAAQ,gBAAGC,iBAAH,kCAAuBN,QAAvB;IAERO,cAAc,gBAAGC,MAAM,CAACC,GAAV,mCAKAZ,WALA,EAUPC,gBAVO,EAePA,gBAfO,EAoBPA,gBApBO,EA2BDR,KAAK,IAAIA,KAAK,CAACa,KAAf,IAAwBb,KAAK,CAACa,KAAN,CAAYC,IA3BnC;;;;"}