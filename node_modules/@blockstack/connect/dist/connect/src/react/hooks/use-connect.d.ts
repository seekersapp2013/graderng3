import { AuthOptions, FinishedData } from '../../auth';
import { ContractCallOptions, ContractDeployOptions, STXTransferOptions } from '../../transactions/types';
export declare const useConnect: () => {
    isOpen: boolean;
    isAuthenticating: boolean;
    authData: FinishedData | undefined;
    authOptions: AuthOptions;
    screen: string;
    userSession: import("blockstack").UserSession | undefined;
    doOpenAuth: (signIn?: boolean | undefined, opts?: Partial<AuthOptions> | undefined) => void;
    doCloseAuth: () => void;
    doChangeScreen: (newScreen: string) => void;
    doGoToIntroScreen: () => void;
    doGoToHowItWorksScreen: () => void;
    doGoToSignInScreen: () => void;
    doCancelAuth: () => void;
    doStartAuth: () => void;
    doFinishAuth: (payload: FinishedData) => void;
    doAuth: (options?: Partial<AuthOptions>) => void;
    authenticate: ({ redirectTo, manifestPath, finished, onFinish, onCancel, authOrigin, sendToSignIn, userSession: _userSession, appDetails, }: AuthOptions) => Promise<void>;
    doContractCall: (opts: ContractCallOptions) => Promise<Window | null>;
    doContractDeploy: (opts: ContractDeployOptions) => Promise<Window | null>;
    doSTXTransfer: (opts: STXTransferOptions) => Promise<Window | null>;
};
